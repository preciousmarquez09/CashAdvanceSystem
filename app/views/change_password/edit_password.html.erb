
<div class="p-5 mt-16 bg-white rounded-lg border-t shadow-md">
    <div class="flex justify-between items-center p-3 flex-wrap gap-2">
        <% if current_user.is_first %>
        <span class="text-2xl sm:text-3xl font-bold">Change Password</span>
        <% else %>
          <span class="text-2xl sm:text-3xl font-bold">First Time Logged In : Change Password</span>
        <% end %>
    </div>

    <div class="relative overflow-hidden py-5 px-8 border-gray-200">
        <%= form_with model: @user, url: update_password_path, method: :patch, local: true do |f| %>
          <div class="w-full mb-5">
            <label for="password" class="block mb-1 text-sm font-medium text-gray-900 dark:text-white">
              Password
              <em class="text-xs">(Must contain uppercase, number, and atleast 6 characters minimum)</em>
              <span class="text-red-500">*</span>
            </label>

            <div class="relative">
              <%= f.password_field :password, autocomplete: "current_password", class: "bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 pr-10 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: "Password", required: true, id: "current_password" %>
              <button type="button" onclick="toggleCurrentPassword()" class="absolute inset-y-0 right-3 flex items-center">
                <i id="eye-icon-password" class="bi bi-eye-slash text-gray-500 cursor-pointer"></i>
              </button>
            </div>
            <% if @user.errors[:password].present? %>
              <p class="text-red-500 text-xs mt-1 ml-2"><%= @user.errors.full_messages_for(:password).first %></p>
            <% end %>  
          </div>

          <div class="w-full mb-5">
            <%= f.label :password_confirmation, class: "block mb-1 text-sm font-medium text-gray-900 dark:text-white" do %>
              Password Confirmation <span class="text-red-500">*</span>
            <% end %>
            <div class="relative">
              <%= f.password_field :password_confirmation, autocomplete: "password_confirmation", class: "bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 pr-10 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500", placeholder: "Password Confirmation", required: true, id: "password_confirmation" %>
              <button type="button" onclick="togglePasswordConfirmation()" class="absolute inset-y-0 right-3 flex items-center">
                <i id="eye-icon-confirm" class="bi bi-eye-slash text-gray-500 cursor-pointer"></i>
              </button>
            </div>
            <% if @user.errors[:password_confirmation].present? %>
              <p class="text-red-500 text-xs mt-1 ml-2"><%= @user.errors.full_messages_for(:password_confirmation).first %></p>
            <% end %>  
          </div>
            <%= f.submit "Update Password", class: "p-3 bg-green-500 text-white font-bold rounded-lg cursor-pointer px-8"%>
        <% end %>
    </div>
</div>

<script>
  function toggleCurrentPassword() {
    const passwordInput = document.getElementById("current_password");
    const eyeIcon = document.getElementById("eye-icon-password");

    if (passwordInput.type === "password") {
      passwordInput.type = "text";
      eyeIcon.classList.replace("bi-eye-slash", "bi-eye");
    } else {
      passwordInput.type = "password";
      eyeIcon.classList.replace("bi-eye", "bi-eye-slash");
    }
  }

  function togglePasswordConfirmation() {
    const passwordInput = document.getElementById("password_confirmation");
    const eyeIcon = document.getElementById("eye-icon-confirm");

    if (passwordInput.type === "password") {
      passwordInput.type = "text";
      eyeIcon.classList.replace("bi-eye-slash", "bi-eye");
    } else {
      passwordInput.type = "password";
      eyeIcon.classList.replace("bi-eye", "bi-eye-slash");
    }
  }

</script>