<div class="p-5">
    <div class="flex justify-between items-center mb-5 p-3 flex-wrap gap-2">
        <span class="text-2xl sm:text-3xl font-bold">Cash Advance List</span>

        <% if @eligible && User.can_request_cashadv(current_user) == true && current_user.has_role?(:finance) %>
            <button data-modal-target="default-modal" data-modal-toggle="default-modal" class="text-sm sm:text-base px-3 sm:px-4 py-2 text-white shadow-md rounded-md bg-blue-500 hover:bg-blue-600 flex items-center space-x-2" type="button">
                <i class="bi bi-file-earmark-plus-fill text-xl"></i>
                <span class="font-semibold">Request Cash Advance</span>
            </button>
        <% end %>
    </div>


    <div class="relative overflow-hidden shadow-md sm:rounded-lg p-8 border-t border-gray-200">
        <div class="mb-5 w-full ">
            <%= search_form_for @q, url: admin_cash_adv_requests_path, method: :get, class: "flex items-center gap-2" do |f| %>
            <%= f.search_field :employee_f_name_or_employee_m_name_or_employee_l_name_or_cut_off_or_status_cont, 
                class: "w-full p-2 border border-gray-300 rounded-lg", 
                placeholder: "Search cash advance requests" %>
            
            <%= f.submit "Search", 
                class: "w-auto px-10 py-2.5 bg-blue-500 text-white shadow-md rounded-md font-semibold" %>
            <% end %>
        </div>
  
        <table class="w-full table-auto text-xs sm:text-md text-left text-gray-500 dark:text-gray-400 mb-5">
            <thead class="text-xs sm:text-sm md:text-md lg:text-md p-2  text-gray-700 bg-gray-200 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <th scope="col" class="px-2 py-2 w-24 hidden sm:table-cell whitespace-nowrap"><%= sort_link(@q, :employee_id, "Employee ID") %></th>
                    <th scope="col" class="px-3 py-2 w-36 whitespace-nowrap"><%= sort_link(@q, "employee_f_name", "Name") %></th>
                    <th scope="col" class="px-3 py-2 w-24 hidden sm:table-cell whitespace-nowrap"><%= sort_link(@q, :amount, "Amount") %></th>
                    <th scope="col" class="px-3 py-2 w-24 hidden md:table-cell whitespace-nowrap"><%= sort_link(@q, :cut_off, "Cut-Off") %></th>
                    <th scope="col" class="px-2 py-2 w-24 hidden md:table-cell whitespace-nowrap"><%= sort_link(@q, :repayment_months, "Repayment Months") %></th> 
                    <th scope="col" class="px-3 py-2 w-24 whitespace-nowrap"><%= sort_link(@q, :status, "Status") %></th>
                    <th scope="col" class="px-3 py-2 w-24 whitespace-nowrap">Action</th>
                </tr>
            </thead>
            <tbody>
            <% if @cash_adv_requests.empty? %>
                <tr>
                <td colspan="7" class="text-center py-3 text-lg">No data available</td>
                </tr>
            <% else %>
                <% @cash_adv_requests.each do |cashadvreq| %>
                <tr class="text-sm sm:text-sm md:text-md lg:text-md bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                    <th class="px-3 py-2 w-24 text-gray-900 dark:text-white hidden md:table-cell">
                    <%= cashadvreq.employee_id %>
                    </th>
                    <td class="px-3 py-3 w-24 capitalize max-w-[150px] truncate overflow-hidden">
                    <%= cashadvreq.employee.f_name + " " + cashadvreq.employee.l_name %>
                    </td>
                    <td class="px-3 py-2 w-24 capitalize hidden md:table-cell"> <%= number_to_currency(cashadvreq.amount, unit: "â‚± ", precision: (cashadvreq.amount % 1 == 0 ? 0 : 2)) %> </td>
                    <td class="px-3 py-2 w-24 hidden md:table-cell capitalize"> <%= cashadvreq.cut_off %> </td>
                    <td class="px-3 py-2 w-24 capitalize max-w-[150px] hidden md:table-cell">
                    <%= cashadvreq.repayment_months %>
                    </td>
                    <td class="px-3 py-2 w-24 capitalize">
                        <span class=" <%= cashadvreq.status_class %>">
                            <%= cashadvreq.status.capitalize %>
                        </span>
                    </td>
                    <td class="px-3 py-2 w-24">
                    <%= link_to admin_cash_adv_request_path(cashadvreq.id), class: "px-2 py-1 text-blue-600" do %>
                        <i class="bi bi-eye-fill"></i>
                    <% end %>
                    <% if current_user.has_role?(:finance) %>
                        <% if !["declined", "on-going", "settled", "released"].include?(cashadvreq.status) %>
                            <%= link_to edit_admin_cash_adv_request_path(cashadvreq.id), class: "px-2 py-1 text-orange-600" do %>
                                <i class="bi bi-pencil-square"></i>
                            <% end %>
                        <% end %>

                        <%= link_to admin_cash_adv_request_path(cashadvreq.id), class: "delete-user-btn px-2 py-1 text-red-600", data: { cashadvreq_id: cashadvreq.id }, onclick: "confirmDelete(event, this); return false;" do %>
                            <i class="bi bi-trash3-fill"></i>
                        <% end %>
                    <% end %>
                    </td>
                </tr>
                <% end %>
            <% end %>
          
            </tbody>
        </table>
        <% if @pagy.pages > 1 %>
            <%= render "/layouts/pagy/pagination", pagy: @pagy %>
        <% end %>

    </div>
</div>

<%= render partial: "modal", locals: { modal_id: "default-modal", eligibility: @eligibility } %>

<script>


function confirmDelete(event, element) {
  event.preventDefault();
  
  Swal.fire({
    title: 'Are you sure?',
    text: "This request will be deleted. This action cannot be undone!",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes, delete it!',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      // Create a hidden form to submit a DELETE request
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = element.getAttribute('href');
      form.style.display = 'none';
      
      // Add method-override input to recognize by rails as DELETE
      const methodInput = document.createElement('input');
      methodInput.type = 'hidden';
      methodInput.name = '_method';
      methodInput.value = 'delete';
      form.appendChild(methodInput);
      
      // Add authenticity token using Rails CSRF protection
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      const csrfInput = document.createElement('input');
      csrfInput.type = 'hidden';
      csrfInput.name = 'authenticity_token';
      csrfInput.value = csrfToken;
      form.appendChild(csrfInput);
      
      document.body.appendChild(form);
      form.submit();
    }
  });
}



</script>


