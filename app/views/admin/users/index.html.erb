<div class="p-5">
    <div class="flex justify-between items-center mb-5 p-3 flex-wrap gap-2">
        <span class="text-2xl sm:text-3xl font-bold">Users List</span>

        <%= link_to new_user_registration_path, class: "text-sm sm:text-base px-3 sm:px-4 py-2 text-white shadow-md rounded-md bg-blue-500 hover:bg-blue-600 flex items-center space-x-2" do %>
            <i class="bi bi-person-fill-add text-lg sm:text-xl"></i> 
            <span>Add New User</span>
        <% end %>
    </div>


    <div class="relative overflow-hidden shadow-md sm:rounded-lg p-8 border-t border-gray-200">
        <table class="w-full table-auto text-xs sm:text-md text-left text-gray-500 dark:text-gray-400">
            <thead class="text-xs sm:text-sm md:text-md lg:text-md p-2  text-gray-700 bg-gray-200 dark:bg-gray-700 dark:text-gray-400">
                <tr>
                    <th scope="col" class="px-2 py-2 w-24 whitespace-nowrap">Employee ID</th>
                    <th scope="col" class="px-3 py-2 w-36 whitespace-nowrap">Name</th>
                    <th scope="col" class="px-3 py-2 w-24 hidden sm:table-cell whitespace-nowrap">Job Title</th>
                    <th scope="col" class="px-3 py-2 w-24 hidden md:table-cell whitespace-nowrap">Employment Status</th> 
                    <th scope="col" class="px-3 py-2 w-24 hidden md:table-cell whitespace-nowrap">Salary</th>
                    <th scope="col" class="px-3 py-2 w-24 hidden lg:table-cell whitespace-nowrap">Role</th>
                    <th scope="col" class="px-3 py-2 w-24 whitespace-nowrap">Action</th>
                </tr>
            </thead>
            <tbody>
                <% @users.each do |user| %>
                    <tr class=" text-sm sm:text-sm md:text-md lg:text-md bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
                        <th scope="row" class="px-3 py-2 w-24 text-gray-900 dark:text-white"> <%= user.employee_id %> </th>
                        <td class="px-3 py-2 w-24 capitalize"> <%= user.f_name + " " + user.l_name %> </td>
                        <td class="px-3 py-2 w-24 capitalize hidden sm:table-cell"> <%= user.job_title %> </td>
                        <td class="px-3 py-2 w-24 capitalize hidden md:table-cell"> <%= user.employment_status %> </td>  
                        <td class="px-3 py-2 w-24 hidden md:table-cell"> <%= user.salary %> </td>
                        <td class="px-3 py-2 w-24 capitalize hidden lg:table-cell"> <%= user.roles.pluck(:name).join(", ") %> </td>
                        <td class="px-3 py-2 w-24">
                            <%= link_to admin_user_path(user.id), class: "px-2 py-1 text-blue-600" do %>
                                <i class="bi bi-eye-fill"></i>
                            <% end %>
                            <%= link_to edit_admin_user_path(user.id), class: "px-2 py-1 text-orange-600" do %>
                                <i class="bi bi-pencil-square"></i>
                            <% end %>
                            <%= link_to admin_user_path(user.id), class: "delete-user-btn px-2 py-1 text-red-600", data: { user_id: user.id }, onclick: "confirmDelete(event, this); return false;" do %>
                                <i class="bi bi-trash3-fill"></i>
                              <% end %>
                        </td>
                    </tr>
                <% end %>
            </tbody>
        </table>
    </div>
</div>


<script>
function confirmDelete(event, element) {
  event.preventDefault();
  
  Swal.fire({
    title: 'Are you sure?',
    text: "This user will be deleted. This action cannot be undone!",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#d33',
    cancelButtonColor: '#3085d6',
    confirmButtonText: 'Yes, delete it!',
    cancelButtonText: 'Cancel'
  }).then((result) => {
    if (result.isConfirmed) {
      // Create a hidden form to submit a DELETE request
      const form = document.createElement('form');
      form.method = 'POST';
      form.action = element.getAttribute('href');
      form.style.display = 'none';
      
      // Add method-override input to recognize by rails as DELETE
      const methodInput = document.createElement('input');
      methodInput.type = 'hidden';
      methodInput.name = '_method';
      methodInput.value = 'delete';
      form.appendChild(methodInput);
      
      // Add authenticity token using Rails CSRF protection
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      const csrfInput = document.createElement('input');
      csrfInput.type = 'hidden';
      csrfInput.name = 'authenticity_token';
      csrfInput.value = csrfToken;
      form.appendChild(csrfInput);
      
      document.body.appendChild(form);
      form.submit();
    }
  });
}
</script>


